plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    //kotlin特殊
    id 'kotlin-kapt'
}


android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        if (rootProject.ext.isModule) {
            applicationId "com.wdz.module_account"
        }
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner testInstrumentationRunner
        //kotlin特殊写法
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        buildConfigField("boolean", "LOG", "true")
    }
    buildTypes {
        release {
            buildConfigField("boolean", "LOG", "false")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            if (rootProject.ext.isModule) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //release模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }

}

dependencies {
    //kotlin
    implementation rootProject.ext.dependencies.kotlin
    implementation rootProject.ext.dependencies.ktx
    implementation rootProject.ext.dependencies.anko
    //必备
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraintlayout
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation rootProject.ext.dependencies.lifecycle_extensions
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation rootProject.ext.dependencies.runner
    androidTestImplementation rootProject.ext.dependencies.espresso

    implementation rootProject.ext.dependencies.arouter
    kapt rootProject.ext.dependencies.arouter_compiler
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.material

    //网络操作 retrofit2+rxJava2
    implementation rootProject.ext.dependencies.rxandroid
    implementation rootProject.ext.dependencies.retrofit
    // 衔接 Retrofit & RxJava
    // 此处一定要注意使用RxJava2的版本
    implementation rootProject.ext.dependencies.retrofit2_rxjava2_adapter
    implementation rootProject.ext.dependencies.rxjava2
    // 支持Gson解析
    implementation rootProject.ext.dependencies.converter_gson

    // rxbinding
    implementation rootProject.ext.dependencies.rxbinding


    implementation rootProject.ext.dependencies.viewmodel_ktx
    implementation project(path: ':kt_common')
    implementation project(path: ':common')
}
